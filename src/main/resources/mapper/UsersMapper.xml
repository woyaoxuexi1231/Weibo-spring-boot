<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cqut.weibo.dao.UsersMapper">

  <resultMap id="BaseResultMap" type="com.cqut.weibo.security.pojo.User">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="VARCHAR" />
    <result column="user_birth" property="userBirth" jdbcType="DATE" />
    <result column="user_desc" property="userDesc" jdbcType="VARCHAR" />
    <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="BIT"/>
    <result column="locked" property="locked" jdbcType="BIT"/>
  </resultMap>
  <resultMap id="UserDtoMap" type="com.cqut.weibo.security.dto.UserDto">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="VARCHAR" />
    <result column="user_birth" property="userBirth" jdbcType="DATE" />
    <result column="user_desc" property="userDesc" jdbcType="VARCHAR" />
    <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR" />
  </resultMap>
  <insert id="insertUser" parameterType="com.cqut.weibo.security.pojo.User" useGeneratedKeys="true" keyProperty="id">
    insert into user (user_name, user_phone, password, user_sex, user_birth, user_desc, user_avatar
      )
    values (#{userName}, #{userPhone}, #{password}, #{userSex}, #{userBirth}, #{userDesc},#{userAvatar}
      )
  </insert>
  <insert id="insertUserRole">
    insert into user_role(uid, rid) values (#{id},1)
  </insert>
  <insert id="submitWeibo" parameterType="com.cqut.weibo.pojo.Weibo">
    insert into user_role(uid, rid) values (#{id},1)
  </insert>
    <insert id="addOrderInformation">
    insert into order_information (order_id, start_time, end_time, user_id, amount, order_name )
    values (#{orderID}, #{startTime}, #{endTime}, #{userID}, #{amount}, #{orderName}
      )
    </insert>
  <insert id="addVipInformation">
    insert into user_vip (user_id, vip_endTime
      )
    values (#{userID}, #{endTime}
      )
  </insert>
  <update id="updateUser" parameterType="com.cqut.weibo.security.dto.UserDto">
    update user
    set user_name = #{userName},
      user_phone = #{userPhone},
      user_sex = #{userSex},
      user_desc = #{userDesc},
      user_birth = #{userBirth},
      user_avatar = #{userAvatar}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateVipInformation">
    update user_vip
    set vip_endTime = #{endTimeBefore}
    where user_id = #{userID}
  </update>
  <select id="selectAll" resultMap="UserDtoMap">
    select user.id,user_name,user_phone,user_sex,user_birth,user_desc,user_avatar from user,user_role
    <where>
      <if test="userName != null and userName != ''">
        user_name like concat("%",#{userName},"%")
      </if>
      and user.id=user_role.uid and user_role.rid = "1"
    </where>
    limit #{start},#{limit}
  </select>
  <select id="getCount" resultType="java.lang.Integer" >
    select COUNT(*) FROM user
    <where>
      <if test="userName != null and userName != ''">
        user_name like concat("%",#{userName},"%")
      </if>
    </where>
  </select>
  <select id="checkUserIsExist" resultType="java.lang.String">
    select user_name from user where user_name = #{userName}
  </select>
  <select id="getDefaultAvatar" resultType="java.lang.String">
    select * from def_avt where default_avatar = CONCAT("http://127.0.0.1:8080/image/default_avatar",#{indexOfDefaultAvatar},".jpg")
  </select>
  <select id="selectByPrimaryKey" resultMap="UserDtoMap">
    select id,user_name,user_phone,user_sex,user_birth,user_desc,user_avatar,
    (select COUNT(*) FROM weibo where user_id=#{id} and enabled = 1 and deleted = 0) as weiboCount,
    (select COUNT(*) FROM fans where fans_id=#{userId} and locked = 1) as followCount,
    (select COUNT(*) FROM fans where user_id=#{userId} and locked = 1) as followerCount
    from user where id = #{id}
  </select>
  <select id="loadUserByUsername" resultType="com.cqut.weibo.security.pojo.User">
    select * from user where user_name = #{userName}
  </select>
  <select id="getUserRolesByUid" resultType="com.cqut.weibo.security.pojo.Role">
    select * from role r,user_role ur where r.id = ur.rid and ur.uid = #{id}
  </select>
  <select id="getWeiboCountByUserId" resultType="java.lang.Integer">
    select COUNT(*) FROM weibo where user_id=#{userId} and enabled = 1 and deleted = 0
  </select>
  <select id="getFollowCountById" resultType="java.lang.Integer">
    select COUNT(*) FROM fans where fans_id=#{userId} and locked = 1
  </select>
  <select id="getFollowerCountById" resultType="java.lang.Integer">
    select COUNT(*) FROM fans where user_id=#{userId} and locked = 1
  </select>
  <select id="getUsersByLikeName" resultMap="UserDtoMap">
    select id,user_name,user_desc,user_avatar from user
    <where>
      <if test="likeName != '' and likeName != null">
        user_name like CONCAT("%",#{likeName},"%")
      </if>
    </where>
  </select>
  <select id="getFollowList" resultType="java.lang.Integer">
    select user_id from fans where fans_id = #{uid} and locked = 1
  </select>
  <select id="getFollowsByUid" resultType="com.cqut.weibo.dto.FollowDto">
    SELECT fans.id, user.id as fid, user_name as userName, user_avatar as userAvatar, user_desc as userDesc, fans.locked as follow FROM `user`,fans where user.id in (SELECT user_id from fans where fans_id = #{uid} and fans.locked = 1) and user.id = fans.user_id and fans.fans_id = #{uid}
  </select>
  <select id="getFollowersByUid" resultType="com.cqut.weibo.dto.FollowerDto">
    SELECT
fans.id, user.id as fid, user_name as userName, user_avatar as userAvatar, user_desc as userDesc
FROM `user`,fans
where user.id in (SELECT fans_id from fans where user_id = #{uid} and fans.locked = 1) and user.id = fans.fans_id and fans.user_id = #{uid}
  </select>
  <select id="checkIsVip" resultType="java.lang.Integer">
    select id from user_vip where user_id = #{userID} and vip_endTime > now();
  </select>
  <select id="getEndTime" resultType="java.lang.String">
    select vip_endTime from user_vip where user_id = #{userID}
  </select>
  <select id="checkIsVipBefore" resultType="java.lang.Integer">
    select id from user_vip where user_id = #{userID}
  </select>
</mapper>